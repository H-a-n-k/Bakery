@model Bakery.Models.ViewModels.ThemHDVM

@{
	ViewBag.Title = "Create";
}

<h2>Tạo mới</h2>
<div>
	@Html.ActionLink("Quay lại", "Index")
</div>
<hr />
<div>Ngày hóa đơn: @DateTime.Today.ToShortDateString()</div>
<div>Tổng tiền: <span id="total">0</span></div>

<hr />
<div class="input-group mb-3">
	<span class="input-group-text" id="basic-addon1">Tìm sản phẩm</span>
	<button type="button" class="btn btn-outline-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
	</button>
	<ul class="dropdown-menu" id="hints" style="width: 300px;">
		@*<li class="dropdown-item btn">Act</li>*@
	</ul>
	<input type="text" class="form-control" placeholder="Nhập tên hoặc id sản phẩm" onkeyup="onSearchChange(event)">
	<button class="btn btn-primary">Tìm</button>
</div>

<hr />
<h3>Danh sách sản phẩm:</h3>
<form method="post" action="AddProduct">
</form>

<hr />
<button class="btn btn-primary mt-3">Tạo hóa đơn</button>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")

	<script>
		let keyword = '';
		let searchDebounce = null;
		let hints = [];

		function onSearchChange(e) {
			showHints();
			$(e.target).focus();
			if (keyword == e.currentTarget.value) return;
			keyword = e.currentTarget.value;
			//if (!keyword || keyword == '') return;

			if (searchDebounce) clearTimeout(searchDebounce);
			searchDebounce = setTimeout(() => {
				$.get('/Admin/sanpham/gethints?keyword=' + keyword, (data) => {
					hints = data;
					let html = '';
					for (let i = 0; i < data.length; i++) {
						var x = data[i];
						html += `
						<li class="dropdown-item btn" onclick="selectHint(${i})">
							<b>#${x.MaSP}</b> ${x.TenSP}
						</li>`
					}

					$('#hints').html(html);
				})
			}, 300)
		}

		function showHints() {
			$('.dropdown-toggle').click();
		}

		function selectHint(i) {
			console.log(hints[i]);
		}
	</script>
}
